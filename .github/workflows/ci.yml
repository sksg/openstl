name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-gcc-linux:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Ninja
        run: sudo apt-get install -y ninja-build

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja

      - name: Build
        run: cmake --build build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-gcc-linux
          path: build

  test-gcc-linux:
    runs-on: ubuntu-24.04
    needs: build-gcc-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-gcc-linux
          path: build

      - name: Set executable permissions
        run: chmod -R +x build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

  build-clang-linux:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Ninja and Clang
        run: |
          sudo apt-get install -y ninja-build clang

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Build
        run: cmake --build build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-clang-linux
          path: build

  test-clang-linux:
    runs-on: ubuntu-24.04
    needs: build-clang-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-clang-linux
          path: build

      - name: Set executable permissions
        run: chmod -R +x build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

  build-gcc-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Ninja
        run: choco install ninja

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja

      - name: Build
        run: cmake --build build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-gcc-windows
          path: build

  test-gcc-windows:
    runs-on: windows-latest
    needs: build-gcc-windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-gcc-windows
          path: build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

  build-clang-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Ninja and Clang
        run: |
          choco install ninja
          choco install llvm

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Build
        run: cmake --build build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-clang-windows
          path: build

  test-clang-windows:
    runs-on: windows-latest
    needs: build-clang-windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-clang-windows
          path: build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
